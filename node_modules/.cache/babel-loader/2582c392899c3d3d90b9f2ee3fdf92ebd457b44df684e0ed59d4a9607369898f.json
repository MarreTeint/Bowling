{"ast":null,"code":"/**\n * Returns the score array from a rolls array\n * \n * @remarks\n * /!\\ A strike is represented by a [10], not a [10, 0] /!\\\n * \n * @param rolls - array representing the succesive rolls of a bowling game \n * \n * @returns\n * The score array\n */\nexport function scoreFromPins(pins) {\n  var score = new Array(10);\n  var counter = 0;\n  for (let i = 0; i + 1 < pins.length; i += 2) {\n    if (counter > 9) {\n      break;\n    }\n    if (pins[i] + pins[i + 1] < 10) {\n      score[counter] = pins[i] + pins[i + 1];\n      counter++;\n      continue;\n    }\n    if (i + 2 >= pins.length) {\n      break;\n    }\n    score[counter] = pins[i] + pins[i + 1] + pins[i + 2];\n    counter += 1;\n    if (pins[i] === 10) {\n      i--;\n    }\n  }\n  for (let i = 1; i < 10; i++) {\n    score[i] += score[i - 1];\n  }\n  return score;\n}\nexport function ScoreListToScore(Soreliste) {\n  let firstPass = [];\n  //copie ScoreListe by replacing \" \" by 0, \"X\" by 10 and \"/\" by 10 - previous roll\n  for (let i = 0; i < Soreliste.length; i++) {\n    if (Soreliste[i] === \" \") {\n      firstPass.push(-1);\n    } else if (Soreliste[i] === \"X\" || Soreliste[i] === 10) {\n      firstPass.push(10);\n    } else if (Soreliste[i] === \"/\") {\n      firstPass.push(10 - firstPass[firstPass.length - 1]);\n    } else {\n      firstPass.push(parseInt(Soreliste[i]));\n    }\n  }\n  let secondPass = [];\n  //copie firstPass by deleting the 0\n  for (let i = 0; i < firstPass.length; i++) {\n    if (firstPass[i] !== -1) {\n      secondPass.push(firstPass[i]);\n    }\n  }\n  return secondPass;\n}\n_c = ScoreListToScore;\nexport default function scoreProcess(ScoreListe) {\n  let score = new Array(10);\n  let pins = ScoreListToScore(ScoreListe);\n  score = scoreFromPins(pins);\n  //return the last index of score whose value is not undefined\n  let lastScore = 0;\n  for (let i = 0; i < score.length; i++) {\n    if (!Number.isNaN(score[i])) {\n      lastScore = i;\n    }\n  }\n  return score[lastScore];\n}\nvar _c;\n$RefreshReg$(_c, \"ScoreListToScore\");","map":{"version":3,"names":["scoreFromPins","pins","score","Array","counter","i","length","ScoreListToScore","Soreliste","firstPass","push","parseInt","secondPass","scoreProcess","ScoreListe","lastScore","Number","isNaN"],"sources":["/home/death-joke/Bureau/App4/qualitÃ© logiciel/Bowling1.1/bowlingv2/src/scoreProcess.ts"],"sourcesContent":["/**\n * Returns the score array from a rolls array\n * \n * @remarks\n * /!\\ A strike is represented by a [10], not a [10, 0] /!\\\n * \n * @param rolls - array representing the succesive rolls of a bowling game \n * \n * @returns\n * The score array\n */\nexport function scoreFromPins(pins:number[]) {\n    var score:number[] = new Array(10);\n    var counter:number = 0;\n    for (let i = 0; i + 1 < pins.length; i+=2)\n    {\n      if (counter > 9)\n      {\n        break;\n      }\n      \n      if (pins[i] + pins[i+1] < 10)\n      {\n        score[counter] = pins[i] + pins[i+1];\n        counter++;\n        continue;\n      }\n  \n      if (i+2 >= pins.length)\n      {\n        break;\n      }\n  \n      score[counter] = pins[i] + pins[i+1] + pins[i+2]\n      counter+=1\n  \n      if (pins[i] === 10)\n      {\n        i--;\n      }\n  \n    }\n  \n    for (let i = 1; i < 10; i++)\n    {\n      score[i] += score[i-1];\n    }\n  \n    return score;\n  }\n\nexport function ScoreListToScore(Soreliste:any) {\n    let firstPass:number[] = [];\n    //copie ScoreListe by replacing \" \" by 0, \"X\" by 10 and \"/\" by 10 - previous roll\n    for (let i = 0; i < Soreliste.length; i++)\n    {\n     \n        if (Soreliste[i] === \" \")\n        {\n          firstPass.push(-1);\n        }\n        else if (Soreliste[i] === \"X\" || Soreliste[i] === 10)\n        {\n          firstPass.push(10);\n          \n          \n        }\n        else if (Soreliste[i] === \"/\")\n        {\n          firstPass.push(10 - firstPass[firstPass.length - 1]);\n        }\n        else\n        {\n          firstPass.push(parseInt(Soreliste[i]));\n        }\n     \n    }\n\n\n    let secondPass:number[] = [];\n    //copie firstPass by deleting the 0\n    for (let i = 0; i < firstPass.length; i++)\n    {\n      if (firstPass[i] !== -1)\n      {\n        secondPass.push(firstPass[i]);\n      }\n    }\n\n\n    return secondPass;\n\n  \n}\n\nexport default function scoreProcess(ScoreListe:any) {\n    let score:number[] = new Array(10);\n    let pins:number[] = ScoreListToScore(ScoreListe);\n    score = scoreFromPins(pins);\n    //return the last index of score whose value is not undefined\n    let lastScore:number = 0;\n    for (let i = 0; i < score.length; i++)\n    {\n      if (!Number.isNaN(score[i]))\n      {\n        lastScore = i;\n      }\n    }\n    return score[lastScore];\n    \n\n   \n  \n\n\n\n\n    \n  }\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}